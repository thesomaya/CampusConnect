<FlatList
          data={[
            { key: "input" },
            ...tempImages.map((uri, index) => ({
              key: uri,
              type: "image",
              index,
            })),
            ...tempDocs.map((doc, index) => ({
              key: doc.uri,
              type: "doc",
              name: doc.name,
              index,
            })),
          ]}
          renderItem={({ item }) => {
            if (item.key === "input") {
              return (
                <TextInput
                  style={styles.textInput}
                  placeholder="Write your post here"
                  value={postText}
                  onChangeText={(text) => setPostText(text)}
                  multiline
                />
              );
            } else if (item.type === "image") {
              return (
                <View style={styles.imageWrapper}>
                  <Image source={{ uri: item.key }} style={styles.image} />
                  <TouchableOpacity
                    style={styles.deleteButton}
                    onPress={() => handleDeleteImage(item.index)}
                  >
                    <AntDesign
                      name="closecircle"
                      size={18}
                      color={colors.red}
                    />
                  </TouchableOpacity>
                </View>
              );
            } else if (item.type === "doc") {
              return (
                <View style={styles.documentContainer}>
                  <Ionicons name="document-outline" size={30} color="black" />
                  <Text style={styles.documentName}>{item.name}</Text>
                  <TouchableOpacity
                    style={styles.deleteDocButton}
                    onPress={() => handleDeleteDocument(item.index)}
                  >
                    <AntDesign
                      name="closecircle"
                      size={18}
                      color={colors.red}
                    />
                  </TouchableOpacity>
                </View>
              );
            }
          }}
          ListFooterComponent={() => null}
        />